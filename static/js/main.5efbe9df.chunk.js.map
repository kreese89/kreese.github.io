{"version":3,"sources":["Components/Navbar.jsx","hs.JPG","Components/About.jsx","Components/Experience.jsx","Components/Projects.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","sections","AppBar","position","color","Container","maxWidth","Toolbar","disableGutters","Box","sx","flexGrow","display","xs","md","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","map","section","MenuItem","onClick","console","log","Typography","textAlign","variant","to","smooth","spy","Button","my","horizonal","href","About","className","width","Grid","container","item","src","headshot","alt","style","height","marginTop","Link","scroller","scrollTo","Experience","Projects","oc","Octokit","useState","projects","setProjects","useEffect","a","request","response","data","fetchData","CircularProgress","justifyContent","spacing","direction","project","Card","raised","overflow","CardHeader","title","name","subheader","topics","join","action","html_url","CardContent","description","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5efbe9df.chunk.js","sourcesContent":["import * as React from 'react';\nimport { \n  AppBar, \n  Box, \n  Toolbar, \n  Typography, \n  Menu, \n  Container, \n  Button, \n  MenuItem \n} from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { Link } from 'react-scroll';\n\nconst Navbar = () => {\n  const sections = ['About Me', 'Experience', 'Projects'];\n\n  return (\n    <AppBar position=\"sticky\" color=\"default\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <Menu\n              id=\"menu-appbar\"\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {sections.map((section) => (\n                <MenuItem key={section} onClick={() => console.log(section)}>\n                  <Typography textAlign=\"center\" variant=\"h5\">{section}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {sections.map((section) => (\n              <Link key={section} to={section} smooth={true} spy={true}>\n                <Button\n                  key={section}\n                  onClick={() => {console.log(section)}}\n                  sx={{ my: 2, color: 'white', display: 'block' }}\n                >\n                  <Typography variant=\"h5\">\n                  {section}\n                  </Typography>\n                </Button>\n              </Link>\n            ))}\n          </Box>\n          <Box transformOrigin={{vertical: 'top', horizonal: 'right'}}>\n            <Button href=\"https://github.com/kreese89\">\n              <GitHubIcon />\n            </Button>\n            <Button href=\"https://www.linkedin.com/in/kylepreese/\" >\n              <LinkedInIcon />\n            </Button>\n            <Button href=\"https://twitter.com/KReese89\">\n              <TwitterIcon />\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/hs.74b76bfe.JPG\";","import * as React from 'react';\nimport '../App.css';\nimport headshot from '../hs.JPG';\nimport { Box, Grid, Typography, Link } from '@material-ui/core';\nimport { scroller } from 'react-scroll';\n\nconst About = () => {\n\n  const handleClick = () => {\n    scroller.scrollTo(\"Experience\", { smooth: true })\n  };\n\n  return (\n    <div className='section' id=\"About Me\">\n      <Box sx={{width: '75%'}}>\n        <Grid container>\n          <Grid item xs={6}>\n            <Box>\n              <img src={headshot} alt=\"Me!\" style={{width: '450px', height: 'auto'}}/>\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n          <Box>\n            <Typography variant=\"h3\">\n              Kyle Reese  \n            </Typography>\n            <Typography variant=\"h6\" style={{marginTop: '15px'}}>\n              Hey there! I'm Kyle and I'm a Full Stack Software Engineer at Accenture \n              currently working on the Facebook client. Before that, I was an undergrad student at\n              the UMD, where I studied Math and Computer Science.\n            </Typography>\n            <Typography variant=\"h6\" style={{marginTop: '15px'}}>\n              {\"I'm interested in a variety of domains and tech stacks. \"}\n              {<Link onClick={handleClick}>{\"Previously\"}</Link>} I've studied defeating network-level internet censorship\n              using genetic algorithms. Recently I've been working on a productivity platform designed to facilitate collaboration and communication between like-minded individuals. More to come!\n            </Typography>\n            <Typography variant=\"h6\" style={{marginTop: '15px'}}>\n              When I'm not sitting at a computer I like to go to the gym, read, and play competitive Super Smash Brothers Melee.\n            </Typography>\n          </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n\nexport default About;","import * as React from 'react';\nimport '../App.css';\n\nconst Experience = () => {\nreturn <div id=\"Experience\" className=\"section\">\n        <p>Coming soon!</p>\n      </div>;\n}\n\nexport default Experience;","import * as React from 'react';\nimport '../App.css';\nimport { Octokit } from 'octokit';\nimport { useState, useEffect } from 'react';\nimport { Box, Button, Grid, Card, CircularProgress, CardHeader, CardContent, Typography } from \"@material-ui/core\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n\nconst Projects = () => {\n  const oc = new Octokit();\n  const [projects, setProjects] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await oc.request(\"GET /users/kreese89/repos\");\n      const data = await response.data;\n      console.log(data);\n      setProjects(data);\n    }\n    fetchData();\n  }, []);\n  \n  if (projects == null) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <div className='section' id=\"Projects\">\n      <Box style={{justifyContent: 'center', width: '50%'}}>\n        <Typography variant=\"h4\">\n          Projects\n        </Typography>\n        <Typography variant=\"h6\">\n          Below are some of the projects I've worked on and thing's I've made. Check them out!\n        </Typography>\n      </Box>\n      <Box style={{marginTop: '10px', width: '50%'}}>\n        <Grid container spacing={1} direction=\"row\" justifyContent=\"center\">\n            {projects.map(project => (\n              <Grid item xs={6}>\n                <Card variant=\"outlined\" raised style={{display: 'inline-block', height: '200px', overflow: 'auto'}}>\n                  <CardHeader \n                    title={\n                    <Typography variant=\"h6\">{project.name}</Typography>\n                    } \n                    subheader={\n                      <Typography variant=\"caption\" color=\"textSecondary\">{project.topics.join(', ')}</Typography>\n                    }\n                    action={\n                      <Button href={project.html_url}>\n                        <GitHubIcon />\n                      </Button>\n                    }\n                  />\n                  <CardContent>\n                    <Typography variant=\"body2\">\n                      {project.description}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n        </Grid>\n      </Box>\n    </div>);\n}\n\nexport default Projects;","import * as React from 'react';\nimport Navbar from './Components/Navbar';\nimport About from './Components/About';\nimport Experience from './Components/Experience';\nimport Projects from './Components/Projects';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <About />\n      <Experience />\n      <Projects />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}