{"version":3,"sources":["Components/Navbar.jsx","hs.JPG","Components/About.jsx","Components/Experience.jsx","Components/Projects.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","sections","AppBar","position","color","Container","maxWidth","Toolbar","disableGutters","Box","sx","flexGrow","display","xs","md","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","map","section","MenuItem","onClick","console","log","Typography","textAlign","variant","to","smooth","spy","Button","my","horizonal","href","About","className","width","Grid","container","item","src","headshot","alt","style","height","marginTop","Link","scroller","scrollTo","Experience","marginLeft","marginRight","spacing","component","Card","CardHeader","title","subheader","CardContent","action","List","dense","marginBottom","ListItem","disablePadding","ListItemIcon","ListItemText","primary","Projects","oc","Octokit","useState","projects","setProjects","useEffect","a","request","response","data","fetchData","CircularProgress","justifyContent","direction","project","raised","overflow","name","topics","join","html_url","description","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52ea6db2.chunk.js","sourcesContent":["import * as React from 'react';\nimport { \n  AppBar, \n  Box, \n  Toolbar, \n  Typography, \n  Menu, \n  Container, \n  Button, \n  MenuItem \n} from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { Link } from 'react-scroll';\n\nconst Navbar = () => {\n  const sections = ['About Me', 'Experience', 'Projects'];\n\n  return (\n    <AppBar position=\"sticky\" color=\"default\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <Menu\n              id=\"menu-appbar\"\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {sections.map((section) => (\n                <MenuItem key={section} onClick={() => console.log(section)}>\n                  <Typography textAlign=\"center\" variant=\"h5\">{section}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {sections.map((section) => (\n              <Link key={section} to={section} smooth={true} spy={true}>\n                <Button\n                  key={section}\n                  onClick={() => {console.log(section)}}\n                  sx={{ my: 2, color: 'white', display: 'block' }}\n                >\n                  <Typography variant=\"h5\">\n                  {section}\n                  </Typography>\n                </Button>\n              </Link>\n            ))}\n          </Box>\n          <Box transformOrigin={{vertical: 'top', horizonal: 'right'}}>\n            <Button href=\"https://github.com/kreese89\">\n              <GitHubIcon />\n            </Button>\n            <Button href=\"https://www.linkedin.com/in/kylepreese/\" >\n              <LinkedInIcon />\n            </Button>\n            <Button href=\"https://twitter.com/KReese89\">\n              <TwitterIcon />\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/hs.74b76bfe.JPG\";","import * as React from 'react';\nimport '../App.css';\nimport headshot from '../hs.JPG';\nimport { Box, Grid, Typography, Link } from '@material-ui/core';\nimport { scroller } from 'react-scroll';\n\nconst About = () => {\n\n  const handleClick = () => {\n    scroller.scrollTo(\"Experience\", { smooth: true })\n  };\n\n  return (\n    <div className='section' id=\"About Me\">\n      <Box sx={{width: '75%'}}>\n        <Grid container>\n          <Grid item xs={6}>\n            <Box>\n              <img src={headshot} alt=\"Me!\" style={{width: '480px', height: 'auto'}}/>\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n          <Box>\n            <Typography variant=\"h3\" style={{marginTop: '15px'}}>\n              Kyle Reese  \n            </Typography>\n            <Typography variant=\"h6\" style={{marginTop: '15px'}}>\n              Hey there! I'm Kyle and I'm a former Privacy Engineer at Meta. Previously, I was doing full-stack Software Engineering at Meta as a contingent worker through Accenture.\n              Before that, I was an undergrad student at\n              the UMD, where I studied Math and Computer Science.\n            </Typography>\n            <Typography variant=\"h6\" style={{marginTop: '15px'}}>\n              I'm interested in Systems + Networks (and their security), OS, PL, and ML. {' '} \n              {<Link onClick={handleClick}>{\"Previously\"}</Link>} I've studied defeating network-level internet censorship\n              using genetic algorithms. \n              Recently I've been working on a productivity platform designed to connect motivated creators, builders, artists, and investors.\n            </Typography>\n            <Typography variant=\"h6\" style={{marginTop: '15px'}}>\n              When I'm not sitting at a computer I like to go to the gym, read, and play Super Smash Bros Melee competitively.\n            </Typography>\n          </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n\nexport default About;","import * as React from 'react';\nimport '../App.css';\nimport { Box, Button, Card, CardHeader, CardContent, Grid, Link, List, ListItem, ListItemText, ListItemIcon, Typography } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport ArrowIcon from '@material-ui/icons/ArrowRight';\n\nconst Experience = () => {\n  return (\n    <div id=\"Experience\" className=\"section\">\n      <Box>\n        <Typography variant=\"h3\">\n          Experience\n        </Typography>\n      </Box>\n      <Box sx={{marginLeft: '2%', marginRight: '2%', marginTop: '1%'}}>\n        <Grid container spacing={1}>\n          <Grid item xs component={Card}>\n              <CardHeader     \n                title={\n                  <Typography variant=\"h1\">\n                    Meta\n                  </Typography>\n                }\n                subheader={\n                   <Typography variant=\"subtitle2\">February 2022 - November 2023</Typography>\n                }\n              />\n              <CardContent style={{marginTop: '-3%'}}>\n                <Typography>\n                  My most recent role was as a Privacy Engineer at Meta, on the Privacy Incident Response Engineering team (PIRE).\n                  Our goal was to provide high-quality engineering support to critical privacy incidents within the company, as well as to build\n                  the detection and prevention frameworks to ensure we don't see the same incident twice.\n                </Typography>\n                <Typography>\n                  During my time there I was able to lead several detection and prevention efforts of privacy and security vulnerabilities. For instance,\n                  I owned the design and development of an automated crashdump exploitability analysis system across the Meta family of apps that analayzed millions of \n                  daily crashes for exploitability signal. Using this system, we were able to identify in-the-wild exploit attempts of Meta apps, and turn\n                  those findings into changes in our codebase.\n                </Typography>\n                {/* <Typography>\n                  We collaborated cross-functionally with investigatory, legal, and product teams to ensure incidents are properly diagnosed, mitigated, and remediated. \n                  We engineered solutions that resolve privacy issues while ensuring the underlying product's scalability and effectiveness are maintained.\n                </Typography> */}\n              </CardContent>\n          </Grid>\n          <Grid item xs component={Card}>\n              <CardHeader \n                title={\n                  <Typography variant=\"h1\">\n                    Accenture\n                  </Typography> \n                }\n                subheader={\n                  <Typography variant=\"subtitle1\">\n                    January 2021 - January 2022\n                  </Typography>\n                }  \n              />\n              <CardContent style={{marginTop: '-3%'}}>\n                <Typography>\n                  Worked as a Full-Stack Software Engineer at Accenture. While with Accenture I worked as a contingent worker at \n                  Meta, where me and a team of other Meta/Accenture SWE's worked on building out\n                  an internal portal designed for Meta's thousands of global vendors to centralize the tooling, communcations,\n                  and resources that they may need. Worked in Meta's web stack, utilizng Javascript and React on \n                  the frontend, Hack on the backend, and GraphQL to construct our API (with Relay as our client)\n                </Typography>\n                <Typography>\n                  I also interned with Accenture twice while attending college: first as a Consulting Summer Analyst (where I helped direct several \n                  in-flight digital projects and conducted and communicated a data analysis on the efficiency of the client's\n                  completion of projects), and second as a Technology Summer Analyst (where I assisted the client in \n                  the health and maintenance of their web application and participated in the Accenture Technology Hackathon)\n                </Typography>\n              </CardContent>\n          </Grid>\n          <Grid item xs component={Card}>\n              <CardHeader     \n                title={\n                  <Typography variant=\"h1\">\n                    <Link href=\"https://geneva.cs.umd.edu/\"> Geneva </Link>\n                  </Typography>\n                }\n                subheader={\n                   <Typography variant=\"subtitle2\">October 2019 - June 2021</Typography>\n                }\n                action={\n                  <Button href=\"https://github.com/kkevsterrr/geneva\">\n                    <GitHubIcon />\n                  </Button>\n                }\n              />\n              <CardContent style={{marginTop: '-3%'}}>\n                <Typography>\n                  Previously, I was a researcher and developer at Geneva. Geneva utilizes genetic algorithms and user-written plugins to automatically \n                  detect and evade packet-level internet censorship. Using this engine the team at Geneva has \n                  been able to make some groundbreaking work into the field of internet privacy and censorship. \n                </Typography>\n                <Typography>\n                  At Geneva, we've: \n                  <List dense style={{ marginTop: '-1%', marginBottom: '-1%'}}>\n                    <ListItem disablePadding>\n                      <ListItemIcon>\n                        <ArrowIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Automated the discovery of client and server-side evasion strategies\"/>\n                    </ListItem> \n                    <ListItem>\n                      <ListItemIcon>\n                        <ArrowIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Shed light into previously unstudied censorship systems around the globe, and\"/> \n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <ArrowIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Demonstrated how to weaponize censoring middleboxes to launch TCP Reflected Amplification \n                      attacks with factors greater than 100x.\"/> \n                    </ListItem>\n                  </List>\n                </Typography>\n                <Typography >\n                Geneva's public build is completely open-source and readily available.\n              </Typography>\n              </CardContent>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n\nexport default Experience;","import * as React from 'react';\nimport '../App.css';\nimport { Octokit } from 'octokit';\nimport { useState, useEffect } from 'react';\nimport { Box, Button, Grid, Card, CircularProgress, CardHeader, CardContent, Typography } from \"@material-ui/core\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n\nconst Projects = () => {\n  const oc = new Octokit();\n  const [projects, setProjects] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await oc.request(\"GET /users/kreese89/repos\");\n      const data = await response.data;\n      console.log(data);\n      setProjects(data);\n    }\n    fetchData();\n  }, []);\n  \n  if (projects == null) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <div className='section' id=\"Projects\">\n      <Box style={{justifyContent: 'center', width: '50%', marginTop: '5%'}}>\n        <Typography variant=\"h3\">\n          Projects\n        </Typography>\n        <Typography variant=\"h6\">\n          Below are some of the projects I've worked on and things I've made. Check them out!\n        </Typography>\n      </Box>\n      <Box style={{marginTop: '10px', width: '50%'}}>\n        <Grid container spacing={1} direction=\"row\" justifyContent=\"center\">\n            {projects.map(project => (\n              <Grid item xs={6}>\n                <Card variant=\"elevation\" raised style={{display: 'inline-block', height: '200px', overflow: 'auto'}}>\n                  <CardHeader \n                    title={\n                    <Typography variant=\"h6\">{project.name}</Typography>\n                    } \n                    subheader={\n                      <Typography variant=\"caption\" color=\"textSecondary\">{project.topics.join(', ')}</Typography>\n                    }\n                    action={\n                      <Button href={project.html_url}>\n                        <GitHubIcon />\n                      </Button>\n                    }\n                  />\n                  <CardContent>\n                    <Typography variant=\"body2\">\n                      {project.description}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n        </Grid>\n      </Box>\n    </div>);\n}\n\nexport default Projects;","import * as React from 'react';\nimport Navbar from './Components/Navbar';\nimport About from './Components/About';\nimport Experience from './Components/Experience';\nimport Projects from './Components/Projects';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <About />\n      <Experience />\n      <Projects />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}